00000000 00FF FF00                  		dc.l $FFFF00
00000004 0000 0000                  		dc.l EntryPoint
00000008                            		
00000008                            EntryPoint:
00000008 46FC 2700                  		move	#$2700, sr
0000000C                            		
0000000C                            ;		move.b	$A10001, d0	; get hardware version
0000000C                            ;		andi.b	#$F,d0
0000000C                            ;		beq.s	SkipSecurity
0000000C                            ;		move.l	#'SEGA', $A14000
0000000C                            ;
0000000C                            ;SkipSecurity:
0000000C                            		
0000000C                            MainProgramme: 	
0000000C 41F9 00C0 0004             		lea		$C00004, a0							; Control port to a0.
00000012 43FA 0000                  		lea		VDPRegSetupData(pc), a1				; Data to a1
00000016 7000                       		moveq	#(((VDPRegSetupData_End-VDPRegSetupData)/2)-1), d0; Items to copy
00000018                            		
00000018                            @setUpVDP:
00000018 3099                       		move.w	(a1)+, (a0)
0000001A 51C8 FFFC                  		dbf		d0, @setUpVDP									; Loop until all registers have been set.
0000001E                            		
0000001E 20BC C01E 0000             		move.l	#$C01E0000, (a0)
00000024 317C 0EEE FFFC             		move.w	#$0EEE, -4(a0)
0000002A                            		
0000002A 43FA 0000                  		lea		Text(pc), a1										; Text location
0000002E 2A3C 460E 0003             		move.l	#$460E0003, d5									; VDP location
00000034 6100                       		bsr.s	WriteASCIIToScreen								; Write to screen.
00000036                            		
00000036 41FA 0000                  		lea		Font(pc), a0
0000003A 7220                       		moveq	#32, d1
0000003C 6100                       		bsr.s	Load_Tiles
0000003E                            
0000003E 60FE                       		bra.s	*
00000040                            		
00000040                            VDPRegSetupData:
00000040 8016                       		dc.w	$8016								; HInt on
00000042 8174                       		dc.w	$8174								; Display on, DMA on, VBI on, 28 row, Genesis mode.
00000044 8230                       		dc.w	$8230								; Plane A address
00000046 8407                       		dc.w	$8407								; Plane B address
00000048 8700                       		dc.w	$8700								; Backdrop is first colour in palette 0
0000004A 8C81                       		dc.w	$8C81								; No interlace, 40 tiles wide.
0000004C 8F02                       		dc.w	$8F02								; Auto inc is 2
0000004E 9001                       		dc.w	$9001								; Plane size is 64x32
00000050                            VDPRegSetupData_End: 
00000050                            
00000050                            
00000050                            Load_Tiles:
00000050                            ;Loads tiles, a0 = in
00000050                            ;d0 = destination in vram1
00000050                            ;d1 = amount of tiles
00000050                            ;Breaks d0, d1, d2, d3, a0, a1
00000050 43F9 00C0 0000             		lea 	$C00000, a1
00000056                            ;		bsr.s 	CalcOffset
00000056 237C 4020 0000 0004        		move.l	#$40200000, 4(a1)
0000005E                            		
0000005E                            @LoadLoop:
0000005E 7607                       		moveq	#7, d3
00000060                            
00000060                            @loop2:
00000060 2298                       		move.l (a0)+, (a1)
00000062 51CB FFFC                  		dbf		d3, @loop2
00000066 51C9 FFF6                  		dbf 	d1, @LoadLoop
0000006A 4E75                       		rts
0000006C                            		
0000006C                            WriteASCIIToScreen:	
0000006C =0000000A                  _NewLine	equ	$0A									; Byte to indicate a newline. 
0000006C =0000000D                  _Space		equ	$0D									; Byte to indicate a space.
0000006C =0000007D                  _End		equ	$7D									; Byte to indicate end of text.
0000006C =00000000                  VRAM_ASCII	equ	$00									; The offset to add to the VDP tile
0000006C                            		
0000006C                            LoadASCII:
0000006C 41F9 00C0 0000             		lea		$C00000, a0
00000072 2145 0004                  		move.l	d5, 4(a0)
00000076                            
00000076                            LoadText_Loop:
00000076 7200                       		moveq	#0,d1
00000078 1219                       		move.b	(a1)+,d1
0000007A 1401                       		move.b	d1,d2
0000007C                            
0000007C 0C02 000D                  		cmp.b	#_Space,d2
00000080 6700 0000                  		beq		LoadASCII_AddSpace
00000084 0C02 007D                  		cmp.b	#_End,d2
00000088 6600 0000                  		bne		LoadASCII_Print
0000008C                            
0000008C 4E75                       		rts
0000008E                            
0000008E                            LoadASCII_Print:
0000008E                            ;		cmp.b	#_NewLine,d2
0000008E                            ;		beq		LoadASCII_NewLine
0000008E                            
0000008E 1202                       		move.b	d2,d1
00000090                            ;		add.w	#VRAM_ASCII,d1
00000090 0441 0040                  		subi.w	#$0040, d1
00000094 3081                       		move.w	d1, (a0)
00000096                            		
00000096                            LoadASCII_Fix:
00000096 60DE                       		bra		LoadText_Loop
00000098                            
00000098                            ;LoadASCII_NewLine:
00000098                            ;		add.l	#$800000,d5
00000098                            ;		bra		LoadASCII
00000098                            		
00000098                            LoadASCII_AddSpace:
00000098                            ;		cmp.b	#_Tab,d2
00000098                            ;		beq		LoadASCII_Fix
00000098                            
00000098 0685 0080 0000             		add.l	#$800000,d5
0000009E 60CC                       		bra		LoadASCII
000000A0                            	
000000A0                            ;CalcOffset:
000000A0                            ;Calculate VDP command shits from an adress in d0.... breaks.... nothing!
000000A0                            ;Optimization time!!!
000000A0                            ;		moveq 	#0, d2
000000A0                            ;		moveq 	#0, d3
000000A0                            ;		move.w 	#$4000, d2
000000A0                            ;		move.w 	d0, d3
000000A0                            ;		and.w 	#$3FFF, d3
000000A0                            ;		add.w 	d3, d2
000000A0                            ;		and.w 	#$C000, d0
000000A0                            ;		lsr.w 	#8, d0
000000A0                            ;		lsr.w 	#6, d0 
000000A0                            ;		swap 	d2
000000A0                            ;		or.l 	d0, d2
000000A0                            ;		move.l 	d2, 4(a1)
000000A0                            ;		rts
000000A0                            		
000000A0                            Font:
000000A0                            		incbin	"font.bin"
000003E0                            
000003E0                            ; Load to $40080003
000003E0                            Text:
000003E0 4845 4C4C 4F20 574F 524C+  		dc.b	"HELLO WORLD THIS IS A TEST", _End
000003FB                            		
